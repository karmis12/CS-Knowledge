1.소프트웨어 생명주기
1-1. 폭포수 모형
-고전적 생명 주기 모형
-선형 순차적 모형
-개발 중간에 변경이 용이하지 않음
순서: 타당선검토 - 계획 - 요구 분석 - 설계 - 구현(코딩) - 테스트(검사) - 유지보수
암기: 분설구테유

1-2. 프로토타입 모형
-견본품을 만들어 최종 결과물을 예측하는 모형
-개발 중간에 요구사항의 변경이 용이

1-3.나선형 모형(=점진적 모형)
-폭포수, 프로토타입의 장점에 위험 분석 기능을 추가한 모형
순서: 계획 및 정의 - 위험 분석 - 공학적 개발 - 고객 평가
암기: 계위개고

1-4.애자일 모형
-애자일은 민첨함, 기민함 의미
-변화에 유연하게 대응
-일정한 주기를 반복하면서 개발과정 진행
-절차와 도구보다 고객과의 소통에 초점을 맞춤
ex. XP, 스크럼, 칸반, 크리스탈, 린
암기: 엑스칸크린

2. 스크럼 기법
-팀원 스스로가 스크럼 팀 구성
-스프런트는 2~4주 정도의 기간으로 진행

2-1 구성원
1. 제품 책임자(PO;product owner)
-요구사항이 담긴 백로그를 작성하는 주체
-백로그에 대한 우선순위 지정, 이해관계자들의 의견을 종합
=백로그 관련 일처리랑 제품제작자와 소비자를 연결해주는 사람이라고 생각하면됨

2. 스크럼 마스터(SM;Scrum Master)
-일일 스크럼 회의 주관
-팀원들을 통제하는 것이 목표가 아님. 조언하는 역할

3. 개발팀(DT;Development Team)
-제품 책임자와 스크럼 마스터를 제외한 모든 팀원
-최대인원 7~8

2-2 스크럼 개발 프로세스
- 스프린트 계획 회의 -> 스프린트 -> 일일 스크럼 -> 스크럼 검토 회의 -> 스프린트 회고
암기: 계스일검회

3.XP기법
3-1. XP(eXtreme Programming)의 핵심가치
-용기, 단순성, 의사소통, 피드백, 존중
암기: 용단의피존

3-2.XP의 기본원리
-Whole Team(전체팀) -Small Releases(소규모 릴리즈)
-Test-Driven Development(테스트 주도 개발) -Continuous Integration(계속적인 통합)
-Collective Ownership(공동 소유권) -Pair Programming(짝 프로그래밍)
-Design Improvement(디자인 개선) 또는 Refactoring(리팩토링)
암기:전소테 계공짝디

4.개발 기술 환경 파악
4-1.운영체제(OP;operating system)
-컴퓨터 자원들을 효율적으로 관리하며 사용자가 컴퓨터를 편리하고 효율적으로
사용할 수 있도록 환경을 제공하는 소프트웨어!이다.
ex. Windows, UNIX, Linux, Mac OS | ios, Android 등등

4-1-2.요구사항 식별 시 고려사항
-가용성, 성능, 기술지원, 구축 비용, 주변기기
암기:가성기구주

4-2.미들웨어(Middleware)
-운영체제와 응용 프로그램 사이에서 추가적인 서비스를 제공하는 소프트웨어

4-3.데이터베이스 관리 시스템(DBMS; Database Management System)
-사용자와 데이터베이스 사이에서 정보를 생성하고  DB를 관리하는 소프트웨어
-데이터베이스의 구성, 접근 방법, 유지관리에 대한 모든 책임을 짐
-JDBC(Java Database Connectivity, 자바), ODBC(Open Database Connectivity, 응용프로그램)
-Oracle, MySQL, SQLite, MongoDB, Redis 등등
-고려사항: 가용성, 성능, 기술지원, 구축비용, 상호 호환성
암기:가성기구호
